{"version":3,"file":"static/js/186.7afa0776.chunk.js","mappings":"8LA6CA,UAzCgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAWH,GACNI,MAAK,SAAAC,GACF,GAAoB,IAAhBA,EAAKC,OACL,MAAM,IAAIC,MAAM,iBAEpBV,EAAWQ,EACd,IACAG,OAAM,SAAAV,GACHC,EAASD,EACZ,GACJ,GACD,CAACE,KAID,8BACKF,GACG,oEAEA,wBACKF,EAAQa,KAAI,SAAAC,GACT,IAAQC,EAAwBD,EAAxBC,QAASC,EAAeF,EAAfE,OAAQC,EAAOH,EAAPG,GACzB,OACI,2BACI,qCAAaD,MACb,uBAAID,MAFCE,EAKhB,OAKpB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../api/api';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getReviews(movieId)\n            .then(data => {\n                if (data.length === 0) {\n                    throw new Error('Data is empty');\n                }\n                setReviews(data);\n            })\n            .catch(error => {\n                setError(error);\n            });\n        }, \n        [movieId]\n    );\n\n    return (\n        <>\n            {error ? (\n                <p>We don`t have any reviews for this time</p>\n            ) : (\n                <ul>\n                    {reviews.map(review => {\n                        const { content, author, id } = review;\n                        return (\n                            <li key={id}>\n                                <h3>Author: {author}</h3>\n                                <p>{content}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </>\n    );\n};\n\nexport default Reviews;"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","getReviews","then","data","length","Error","catch","map","review","content","author","id"],"sourceRoot":""}